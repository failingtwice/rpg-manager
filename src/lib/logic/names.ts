import { SpeciesName } from './species';

const dragonbornFirstNames = [
	'Akra',
	'Biri',
	'Daar',
	'Findex',
	'Jheri',
	'Kava',
	'Mehen',
	'Nala',
	'Perra',
	'Raiann',
	'Sora',
	'Surina',
	'Thava',
	'Uadjit',
	'Vaylish',
	'Zorrah',
	'Rhogariel',
	'Mythkava',
	'Shirrann',
	'Tazlani',
	'Vexira',
	'Thyssara',
	'Zyrrith',
	'Qerith',
	'Arjhan',
	'Balasar',
	'Bharash',
	'Ghesh',
	'Heskan',
	'Kriv',
	'Medrash',
	'Mehen',
	'Nadarr',
	'Pandjed',
	'Patrin',
	'Rhogar',
	'Shamash',
	'Shedinn',
	'Tarhun',
	'Torinn',
	'Zorakas',
	'Veydrak',
	'Thavok',
	'Quorash',
	'Drakthar',
	'Valkorin',
	'Tiamatoth',
	'Varash',
	'Thyrris',
	'Khordrith',
	'Soryn',
	'Drazzik',
	'Narkul',
	'Velzorr',
	'Zyndric',
	'Rhaegor',
	'Thrynn',
	'Sargrax'
];

const dragonbornSecondNames = [
	'Flameborn',
	'Stormclaw',
	'Fireheart',
	'Thunderfang',
	'Bloodscale',
	'Drakebane',
	'Dreadflame',
	'Ashenmaw',
	'Moltenfang',
	'Ironwing',
	'Cindermaw',
	'Voidscale',
	'Pyreborn',
	'Ragewing',
	'Frosttongue',
	'Darktalon',
	'Emberclaw',
	'Onyxscale',
	'Crimsonbrand',
	'Infernoheart',
	'Stormscale',
	'Venomclaw',
	'Blazefang',
	'Flamewrath',
	'Razorwing'
];

const dwarfFirstNames = [
	'Brynna',
	'Dagmar',
	'Eldeth',
	'Gerta',
	'Helja',
	'Ingra',
	'Jora',
	'Kathra',
	'Luthra',
	'Mardred',
	'Nora',
	'Olga',
	'Riswynn',
	'Sannl',
	'Tilda',
	'Ula',
	'Vistra',
	'Zarnna',
	'Drusilla',
	'Fenella',
	'Ygritte',
	'Thorgga',
	'Orla',
	'Velma',
	'Thrain',
	'Gimli',
	'Balin',
	'Dain',
	'Thorin',
	'Durin',
	'Karg',
	'Brom',
	'Dorn',
	'Hulgar',
	'Bofar',
	'Torbjorn',
	'Ulfar',
	'Rurik',
	'Grimnar',
	'Gottrek',
	'Norin',
	'Vargan',
	'Kazrik',
	'Stenn',
	'Orsik',
	'Dagnal',
	'Barrend',
	'Kolvar',
	'Jorik',
	'Throal',
	'Skorri',
	'Brogan',
	'Mordain'
];

const dwarfSecondNames = [
	'Ironbeard',
	'Stonefist',
	'Thunderaxe',
	'Frostforge',
	'Hammerhand',
	'Darkanvil',
	'Gravelforge',
	'Stormbeard',
	'Firefury',
	'Goldvein',
	'Deepdelver',
	'Runeforge',
	'Ironshield',
	'Stormbrew',
	'Flamebeard',
	'Boulderfist',
	'Anvilborn',
	'Deepstone',
	'Embermantle',
	'Drakeshield',
	'Ragehammer',
	'Battleforged',
	'Earthborn',
	'Steelgrip'
];

const elfFirstNames = [
	'Aeris',
	'Brielle',
	'Calithil',
	'Daeriel',
	'Elaria',
	'Faelwen',
	'Gwyndara',
	'Helyndra',
	'Isilme',
	'Jelenneth',
	'Kyra',
	'Lorien',
	'Mythara',
	'Naivara',
	'Orlanna',
	'Quilathe',
	'Rilneth',
	'Sylphiel',
	'Thalindra',
	'Valindra',
	'Xanaphia',
	'Yllawen',
	'Zylleth',
	'Nimwen',
	'Tiriel',
	'Elara',
	'Aelar',
	'Eldrin',
	'Faelar',
	'Galadhel',
	'Ithil',
	'Kaelen',
	'Lorandil',
	'Mythrin',
	'Naeris',
	'Orithil',
	'Quenaris',
	'Riluaneth',
	'Silvyr',
	'Thamior',
	'Vaelith',
	'Zylnan',
	'Eldarion',
	'Sylviel',
	'Caladwen',
	'Thalorien',
	'Lyari',
	'Erevandor',
	'Xanaphia',
	'Valindra',
	'Arannis',
	'Tanithil'
];

const elfSecondNames = [
	'Moonshadow',
	'Silverleaf',
	'Duskwhisper',
	'Starfall',
	'Evenwind',
	'Nightbloom',
	'Lighthaven',
	'Sunweaver',
	'Mistwalker',
	'Willowglade',
	'Twilightborn',
	'Dewwhisper',
	'Stormgleam',
	'Skywatcher',
	'Shadowglen',
	'Galecrest',
	'Flamebreeze',
	'Dawnseeker',
	'Everwander',
	'Rainsinger',
	'Autumnveil',
	'Windsong'
];

const gnomeFirstNames = [
	'Alba',
	'Bimpnottin',
	'Caramip',
	'Duvamil',
	'Ellyjoy',
	'Fabblie',
	'Glim',
	'Jorri',
	'Kallie',
	'Lillia',
	'Merrie',
	'Nissa',
	'Oda',
	'Pippa',
	'Quillie',
	'Ribbles',
	'Sapphy',
	'Tivian',
	'Urdina',
	'Vixie',
	'Whizzra',
	'Zannifer',
	'Zibby',
	'Trixa',
	'Alston',
	'Boddynock',
	'Dilwyn',
	'Fablen',
	'Gimble',
	'Jebeddo',
	'Nackle',
	'Orlen',
	'Quenlin',
	'Rellwick',
	'Sprocket',
	'Tivorn',
	'Uldin',
	'Wizzle',
	'Yorric',
	'Zibben',
	'Fizzwick',
	'Tinkerton',
	'Bramble',
	'Nixie',
	'Zook',
	'Dobbledob',
	'Felwick',
	'Zazzle',
	'Mervin',
	'Gadget',
	'Whizzle'
];

const gnomeSecondNames = [
	'Cogspinner',
	'Tinkerbloom',
	'Brassgear',
	'Whizzleton',
	'Sprockethandle',
	'Brightspark',
	'Copperbranch',
	'Gadgeteer',
	'Sizzlewhiz',
	'Wobbletop',
	'Nimbleclock',
	'Zappwhistle',
	'Felwhistle',
	'Tinkertorque',
	'Gearwhizz',
	'Clankfizzle',
	'Silverknob',
	'Fizzlebang',
	'Mekgleam',
	'Gleamfidget',
	'Brassgrinder'
];

const goliathFirstNames = [
	'Anaki',
	'Bamaka',
	'Duna',
	'Ernala',
	'Gathak',
	'Hania',
	'Ivara',
	'Jolh',
	'Koveth',
	'Lorna',
	'Mavaki',
	'Nahema',
	'Onnka',
	'Pavari',
	'Quara',
	'Runa',
	'Surnak',
	'Tovaki',
	'Urala',
	'Vekka',
	'Wurna',
	'Xurni',
	'Ylara',
	'Zavari',
	'Orvek',
	'Drukk',
	'Throm',
	'Gorun',
	'Harkon',
	'Zorak',
	'Torgon',
	'Grudok',
	'Varkul',
	'Ragnar',
	'Bruzgar',
	'Kargath',
	'Durnok',
	'Farrik',
	'Rokthar',
	'Torgrim',
	'Kragg',
	'Thalrik',
	'Brathor',
	'Gorrun',
	'Ulgar',
	'Zharnok'
];

const goliathSecondNames = [
	'Thunderstride',
	'Stonefury',
	'Ironclad',
	'Stormbreaker',
	'Dawnseeker',
	'Earthshaker',
	'Skysplitter',
	'Shadowmountain',
	'Frostbrow',
	'Titanbane',
	'Firepeak',
	'Flamefist',
	'Drakenmaul',
	'Icebreaker',
	'Boulderborn',
	'Stormclash',
	'Rockhowl',
	'Coldbreaker'
];

const halflingFirstNames = [
	'Amaryllis',
	'Belladonna',
	'Celandine',
	'Daisy',
	'Eglantine',
	'Fenna',
	'Goldie',
	'Hazel',
	'Ivy',
	'Jasmine',
	'Kithri',
	'Lavinia',
	'Marigold',
	'Nessa',
	'Olive',
	'Poppy',
	'Rosie',
	'Sylvie',
	'Tansy',
	'Uma',
	'Violet',
	'Willow',
	'Xanthe',
	'Yarrow',
	'Zinnia',
	'Alton',
	'Bungo',
	'Dewin',
	'Finnan',
	'Galen',
	'Jasper',
	'Lyle',
	'Milo',
	'Nedric',
	'Oswin',
	'Perrin',
	'Quinn',
	'Roscoe',
	'Tobyn',
	'Wilbur',
	'Zadric',
	'Eldric',
	'Tuck',
	'Bailey',
	'Jory',
	'Merret',
	'Poppy',
	'Tansy'
];

const halflingSecondNames = [
	'Greenbottle',
	'Underbough',
	'Lightfoot',
	'Appleblossom',
	'Brandybuck',
	'Mugwort',
	'Goodbarrel',
	'Tealeaf',
	'Merrydown',
	'Pinegrove',
	'Dewthistle',
	'Rumblebelly',
	'Honeypuddle',
	'Barleycorn',
	'Tricklenose',
	'Meadowbrook',
	'Sweetsong',
	'Featherwhistle'
];

const humanFirstNames = [
	// Classic/European
	'Adelaide',
	'Beatrice',
	'Cecilia',
	'Diana',
	'Eleanor',
	'Florence',
	'Genevieve',
	'Helena',
	'Isadora',
	'Josephine',
	'Katherine',
	'Lillian',
	'Margaret',
	'Nadine',
	'Odette',
	'Penelope',
	'Rosalind',
	'Seraphina',
	'Theodora',
	'Victoria',
	'Winifred',

	// Viking / Norse-inspired
	'Astrid',
	'Brynhild',
	'Freydis',
	'Gunhild',
	'Hilda',
	'Ingrid',
	'Kari',
	'Lagertha',
	'Ragna',
	'Sigrid',
	'Torunn',
	'Ylva',

	// Slavic-inspired
	'Anastasia',
	'Darya',
	'Ekaterina',
	'Galina',
	'Irina',
	'Karina',
	'Ludmila',
	'Miroslava',
	'Nadezhda',
	'Olga',
	'Svetlana',
	'Tatiana',
	'Vasilisa',
	'Zoya',

	// Arabic/Persian-inspired
	'Aaliyah',
	'Basma',
	'Dania',
	'Fatima',
	'Habiba',
	'Jalila',
	'Layla',
	'Malika',
	'Noura',
	'Rania',
	'Sahar',
	'Talia',
	'Zahira',
	'Yasmin',

	// Asian-inspired (Chinese, Japanese, Indian)
	'Ai',
	'Bao',
	'Chiharu',
	'Hana',
	'Jiao',
	'Kaori',
	'Mei',
	'Natsumi',
	'Rina',
	'Sakura',
	'Tenzin',
	'Xia',
	'Yuki',
	'Zhen',

	// African-inspired
	'Abena',
	'Abeni',
	'Chinara',
	'Eshe',
	'Kamaria',
	'Mirembe',
	'Nia',
	'Sade',
	'Tafadzwa',
	'Zuri',
	// Classic European-inspired names
	'Alden',
	'Benedict',
	'Cedric',
	'Dorian',
	'Edmund',
	'Frederic',
	'Geoffrey',
	'Hadrian',
	'Ivor',
	'Julian',
	'Leopold',
	'Maximilian',
	'Nathaniel',
	'Oswald',
	'Percival',
	'Quentin',
	'Reginald',
	'Sebastian',
	'Theodore',
	'Ulric',
	'Victor',
	'Wesley',
	'Xavier',
	'Zacharias',

	// Viking / Norse-inspired names
	'Bjorn',
	'Eirik',
	'Haldor',
	'Ingvar',
	'Kjell',
	'Leif',
	'Magnus',
	'Ragnar',
	'Sigurd',
	'Torsten',
	'Ulf',
	'Vidar',
	'Wulfric',
	'Yngvar',

	// Slavic-inspired names
	'Boris',
	'Dmitri',
	'Igor',
	'Kazimir',
	'Luka',
	'Nikolai',
	'Oleg',
	'Radoslav',
	'Sergei',
	'Vasili',
	'Yaroslav',
	'Zoran',

	// Arabic/Persian-inspired names
	'Aziz',
	'Bahir',
	'Cassim',
	'Darius',
	'Faris',
	'Hakim',
	'Jamal',
	'Karim',
	'Malik',
	'Nasir',
	'Omar',
	'Rafiq',
	'Salim',
	'Tariq',
	'Zahir',

	// Asian-inspired names (Chinese, Japanese, Indian, etc.)
	'Akira',
	'Bao',
	'Chao',
	'Daiki',
	'Haruki',
	'Kenji',
	'Lei',
	'Minh',
	'Ravi',
	'Sanjay',
	'Takashi',
	'Yuki',
	'Zhen',

	// African-inspired names
	'Abebe',
	'Bakari',
	'Chidi',
	'Dakarai',
	'Ekene',
	'Femi',
	'Jelani',
	'Kwame',
	'Obasi',
	'Taye',
	'Zuberi',

	// General fantasy/heroic names
	'Aric',
	'Baldric',
	'Caradoc',
	'Drystan',
	'Elric',
	'Fendrel',
	'Garrick',
	'Hawke',
	'Jareth',
	'Lorien',
	'Merric',
	'Orin',
	'Roderic',
	'Talon',
	'Vance',
	'Xander',
	'Zane'
];

const humanSecondNames = [
	// English / Medieval-inspired surnames
	'Blackwood',
	'Brightmore',
	'Caldwell',
	'Davenport',
	'Everhart',
	'Fairchild',
	'Grantham',
	'Hawthorne',
	'Ironwood',
	'Kingsley',
	'Lancaster',
	'Montague',
	'Norwood',
	'Pendleton',
	'Redwyne',
	'Sterling',
	'Thorne',
	'Underhill',
	'Whitmore',

	// Viking / Norse-inspired surnames
	'Bjornson',
	'Eriksson',
	'Gunderson',
	'Haraldson',
	'Ivarsson',
	'Leifsson',
	'Magnusson',
	'Olafsson',
	'Sigurdson',
	'Torvaldson',
	'Ulfsson',

	// Slavic-inspired surnames
	'Antonov',
	'Borisov',
	'Dmitriev',
	'Fedorov',
	'Ivanov',
	'Kovalenko',
	'Nikolaev',
	'Petrov',
	'Sergeyev',
	'Volkov',
	'Zhukov',

	// Arabic/Persian-inspired surnames
	'Al-Farsi',
	'Bakhtiar',
	'Darzi',
	'Hakimi',
	'Ibrahim',
	'Jalali',
	'Kazemi',
	'Mirza',
	'Nasiri',
	'Rashid',
	'Zayyan',

	// Asian-inspired surnames
	'Chen',
	'Huang',
	'Kobayashi',
	'Lee',
	'Nguyen',
	'Patel',
	'Rao',
	'Takahashi',
	'Tanaka',
	'Watanabe',
	'Zhao',

	// African-inspired surnames
	'Abiodun',
	'Chukwuma',
	'Diallo',
	'Eze',
	'Kamara',
	'Okafor',
	'Onyekachi',
	'Toure',
	'Zubair',

	// General fantasy/heroic surnames
	'Ashford',
	'Battleborn',
	'Crownguard',
	'Daggerfall',
	'Dragonbane',
	'Emberfall',
	'Frostborne',
	'Hawkridge',
	'Moonshadow',
	'Nightshade',
	'Runebreaker',
	'Stormrider',
	'Thundershield',
	'Wolfbane',
	'Zephyr'
];

const orcFirstNames = [
	'Gorok',
	'Drek',
	'Thrag',
	'Morg',
	'Zog',
	'Krug',
	'Drak',
	'Grom',
	'Urk',
	'Vor',
	'Shag',
	'Brak',
	'Grash',
	'Lok',
	'Vrok',
	'Thokk',
	'Nargh',
	'Gash',
	'Ruk',
	'Zarn',
	'Brog',
	'Snag',
	'Krag',
	'Rash',
	'Torug',
	'Muzg',
	'Korg',
	'Grum',
	'Tog',
	'Urthak',
	'Vorg',
	'Thrug',
	'Zarnok',
	'Brukk',
	'Durg',
	'Narg',
	'Thrud',
	'Gorash',
	'Zogrok',
	'Rugrash',
	'Ushak',
	'Murg',
	'Vrog',
	'Dorn',
	'Rath',
	'Dakk',
	'Korgash',
	'Jurg',
	'Vazg',
	'Kroz',
	'Thrug',
	'Urmag',
	'Zarth',
	'Gorvok',
	'Druk',
	'Varg',
	'Grut',
	'Trom',
	'Razg',
	'Uzgrok',
	'Skarn',
	'Dorag',
	'Rogz',
	'Throm',
	'Morgul',
	'Thazg',
	'Bort',
	'Farg',
	'Zod',
	'Xarg',
	'Rograk',
	'Krogar',
	'Kralg',
	'Gorzak',
	'Trok',
	'Zhag',
	'Shug',
	'Dorg',
	'Vrug',
	'Hark',
	'Kazg',
	'Brund',
	'Kragnok',
	'Tograk',
	'Jurz',
	'Dramok',
	'Lorz',
	'Mograk',
	'Urn',
	'Gral',
	'Thogrum',
	'Zorth',
	'Rathok',
	'Vraz',
	'Driz',
	'Kund',
	'Varn',
	'Thog',
	'Borok',
	'Drath',
	'Xargoth',
	'Vorak',
	'Tazg',
	'Durn',
	'Roktar',
	'Khurn',
	'Morz',
	'Juth',
	'Drok'
];

const orcSecondNames = [
	'Bloodfist',
	'Skullsplitter',
	'Ironfang',
	'Doomhowl',
	'Blacktooth',
	'Bonecrusher',
	'Warbringer',
	'Stormaxe',
	'Darkmaw',
	'Firegut',
	'Gorehammer',
	'Deathscar',
	'Fangbreaker',
	'Shadowfury',
	'Thunderjaw',
	'Steelclaw',
	'Rageborn',
	'Ashblood',
	'Flamefist',
	'Warcry',
	'Frosthide',
	'Stormwrath',
	'Skarr',
	'Battleborn',
	'Hatefang',
	'Ruinclaw',
	'Rotfang',
	'Bruteblood',
	'Hellscream',
	'Nightfang',
	'Redblade',
	'Ironhide',
	'Stormfang',
	'Darkrend',
	'Dreadscar',
	'Stormbreaker',
	'Skullcrusher',
	'Goreborn',
	'Rotgut',
	'Grimbreath',
	'Firemane',
	'Thundermane',
	'Ironflame',
	'Bloodhowl',
	'Frostmaw',
	'Blackscar',
	'Deathbringer',
	'Warborn',
	'Flametongue',
	'Doomfury',
	'Darkfang',
	'Bonegnasher',
	'Warchild',
	'Wrathborn',
	'Shadownail',
	'Stormclaw',
	'Fleshbreaker',
	'Deadgrip',
	'Steelfang',
	'Nightscar',
	'Ashenmaw',
	'Frostfang',
	'Skulldrinker',
	'Graveborn',
	'Firebrand',
	'Blightgut',
	'Voidfang',
	'Dreadjaw',
	'Thunderborn',
	'Wrathhowl',
	'Deathhowl',
	'Redscar',
	'Grimhorn',
	'Ragefury',
	'Bloodbane',
	'Shatteredfang',
	'Ruinbane',
	'Hateclaw',
	'Stormrage',
	'Burningfang',
	'Ironmaw',
	'Blackvenom',
	'Deathstorm',
	'Shadowrend',
	'Venomblood',
	'Daggerjaw',
	'Bloodvenge',
	'Nightaxe',
	'Stonejaw',
	'Warvenom',
	'Stormsnarl',
	'Crimsonfang',
	'Blazefury',
	'Rotscar',
	'Goreclaw',
	'Firetooth'
];

const tieflingFirstNames = [
	'Amara',
	'Azazel',
	'Bellatrix',
	'Carmilla',
	'Drusilla',
	'Eris',
	'Furiae',
	'Gildara',
	'Hecate',
	'Ishtar',
	'Jezebel',
	'Lilith',
	'Morganna',
	'Nyx',
	'Ophelia',
	'Persephone',
	'Quorra',
	'Ravena',
	'Selene',
	'Thyra',
	'Umbra',
	'Vesper',
	'Xanthe',
	'Zyrah',
	'Astarion',
	'Balthazar',
	'Cassius',
	'Damaia',
	'Erevan',
	'Fenris',
	'Gavroth',
	'Harken',
	'Ignis',
	'Jareth',
	'Kael',
	'Lucian',
	'Morthos',
	'Nyx',
	'Orpheus',
	'Pyralis',
	'Quiron',
	'Raze',
	'Samael',
	'Thyron',
	'Varith',
	'Xathos',
	'Zareth',
	'Zephyrus'
];

const tieflingSecondNames = [
	'Darkflame',
	'Hellborn',
	'Doomsayer',
	'Nightfang',
	'Voidborn',
	'Infernal',
	'Ashenblood',
	'Bloodcursed',
	'Shadowwhisper',
	'Flametongue',
	'Demonfang',
	'Oblivion',
	'Soulthief',
	'Havoc',
	'Starfall',
	'Voidheart',
	'Dreadscar',
	'Ebonveil',
	'Twilightbane'
];

export function getRandomName(species: SpeciesName): string {
	switch (species) {
		case SpeciesName.Orc:
			return (
				orcFirstNames[Math.floor(Math.random() * orcFirstNames.length)] +
				' ' +
				orcSecondNames[Math.floor(Math.random() * orcSecondNames.length)]
			);
		case SpeciesName.Dragonborn:
			return (
				dragonbornFirstNames[Math.floor(Math.random() * dragonbornFirstNames.length)] +
				' ' +
				dragonbornSecondNames[Math.floor(Math.random() * dragonbornSecondNames.length)]
			);
		case SpeciesName.Human:
			return (
				humanFirstNames[Math.floor(Math.random() * humanFirstNames.length)] +
				' ' +
				humanSecondNames[Math.floor(Math.random() * humanSecondNames.length)]
			);
		case SpeciesName.Elf:
			return (
				elfFirstNames[Math.floor(Math.random() * elfFirstNames.length)] +
				' ' +
				elfSecondNames[Math.floor(Math.random() * elfSecondNames.length)]
			);
		case SpeciesName.Dwarf:
			return (
				dwarfFirstNames[Math.floor(Math.random() * dwarfFirstNames.length)] +
				' ' +
				dwarfSecondNames[Math.floor(Math.random() * dwarfSecondNames.length)]
			);
		case SpeciesName.Gnome:
			return (
				gnomeFirstNames[Math.floor(Math.random() * gnomeFirstNames.length)] +
				' ' +
				gnomeSecondNames[Math.floor(Math.random() * gnomeSecondNames.length)]
			);
		case SpeciesName.Goliath:
			return (
				goliathFirstNames[Math.floor(Math.random() * goliathFirstNames.length)] +
				' ' +
				goliathSecondNames[Math.floor(Math.random() * goliathSecondNames.length)]
			);
		case SpeciesName.Halfling:
			return (
				halflingFirstNames[Math.floor(Math.random() * halflingFirstNames.length)] +
				' ' +
				halflingSecondNames[Math.floor(Math.random() * halflingSecondNames.length)]
			);
		case SpeciesName.Tiefling:
			return (
				tieflingFirstNames[Math.floor(Math.random() * tieflingFirstNames.length)] +
				' ' +
				tieflingSecondNames[Math.floor(Math.random() * tieflingSecondNames.length)]
			);
		default:
			throw new Error('Invalid species');
	}
}
